actor User
User->Browser:
Browser->jans-admin-ui: try to access `jans-admin-ui`

jans-admin-ui->Identity Provider: redirect to the authorization-server for authentication

Identity Provider-->jans-admin-ui: code

jans-admin-ui->jans-admin-ui-backend:request for `access_token` using `code`

jans-admin-ui-backend->Identity Provider: request for `access_token` using `code`

Identity Provider-->jans-admin-ui-backend:access_token

jans-admin-ui-backend->jans-admin-ui:send back the `access_token`

jans-admin-ui->Identity Provider:request for `user-information` using `access_token`

Identity Provider-->jans-admin-ui:`user-information` (containing list of `config-api scopes`)

jans-admin-ui->jans-admin-ui:From `config-api scopes`, the features on the UI can be turn on/off depending on the permissions.

jans-admin-ui->jans-admin-ui-backend:request `api-token` using `config-api-scopes` 

jans-admin-ui-backend->Identity Provider:request `api-token` using `config-api-scopes`

Identity Provider-->jans-admin-ui-backend:api-token

jans-admin-ui-backend->jans-admin-ui:api-token

jans-admin-ui->jans-admin-ui:stores `api-token` in redux store

jans-admin-ui->jans-config-api:access `jans-config-api` apis using `api-token` 

jans-config-api-->jans-admin-ui: send api response
