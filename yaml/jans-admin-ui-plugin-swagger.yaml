openapi: 3.0.1
info:
  title: Jans Config API - Admin-UI
  contact:
    name: Gluu Support
    url: https://support.gluu.org
    email: xxx@gluu.org
  license:
    name: Apache 2.0
    url: https://github.com/JanssenProject/jans/blob/main/LICENSE
  version: '1.0.0'
servers:
- url: https://jans.io/
  description: The Jans server
  variables: {}
tags:
- name: Admin UI - Role
- name: Admin UI - Permission
- name: Admin UI - Role-Permissions Mapping
- name: Admin UI - License
paths:
  /jans-config-api/admin-ui/user/roles:
    get:
      tags:
        - Admin UI - Role
      x-cli-plugin: admin-ui
      summary: Get all admin ui roles.
      description: Get all admin ui roles.
      operationId: get-adminui-roles
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/role.read]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Get admin ui roles.
                description: Get admin ui roles.
                type: array
                items:
                  $ref: '#/components/schemas/AdminRole'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Admin UI - Role
      x-cli-plugin: admin-ui
      summary: Add admin ui role.
      description: Add admin ui role.
      operationId: add-adminui-role
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write]
      requestBody:
        content:
          application/json:
            schema:
              required:
                - role
              $ref: '#/components/schemas/AdminRole'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Add admin ui role.
                description: Add admin ui role.
                type: array
                items:
                  $ref: '#/components/schemas/AdminRole'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Admin UI - Role
      x-cli-plugin: admin-ui
      summary: Edit admin ui role.
      description: Edit admin ui role.
      operationId: edit-adminui-role
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRole'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Edit admin ui role.
                description: Edit admin ui role.
                type: array
                items:
                  $ref: '#/components/schemas/AdminRole'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Admin UI - Role
      x-cli-plugin: admin-ui
      summary: Delete admin ui role.
      description: Delete admin ui role.
      operationId: delete-adminui-role
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRole'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Delete admin ui role.
                description: Delete admin ui role.
                type: array
                items:
                  $ref: '#/components/schemas/AdminRole'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /jans-config-api/admin-ui/user/permissions:
    get:
      tags:
        - Admin UI - Permission
      x-cli-plugin: admin-ui
      summary: Get admin ui permissions.
      description: Get admin ui permissions.
      operationId: get-adminui-permissions
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.read]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Get admin ui permissions.
                description: Get admin ui permissions.
                type: array
                items:
                  $ref: '#/components/schemas/AdminPermission'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Admin UI - Permission
      x-cli-plugin: admin-ui
      summary: Add admin ui permission.
      description: Add admin ui permission.
      operationId: add-adminui-permission
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write]
      requestBody:
        content:
          application/json:
            schema:
              required:
                - permission
              $ref: '#/components/schemas/AdminPermission'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Add admin ui permission.
                description: Add admin ui permission.
                type: array
                items:
                  $ref: '#/components/schemas/AdminPermission'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Admin UI - Permission
      x-cli-plugin: admin-ui
      summary: Edit admin ui permission.
      description: Edit admin ui permission.
      operationId: edit-adminui-permission
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPermission'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Edit admin ui permission.
                description: Edit admin ui permission.
                type: array
                items:
                  $ref: '#/components/schemas/AdminPermission'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Admin UI - Permission
      x-cli-plugin: admin-ui
      summary: Delete admin ui permission.
      description: Delete admin ui permission.
      operationId: delete-adminui-permission
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPermission'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Delete admin ui permission.
                description: Delete admin ui permission.
                type: array
                items:
                  $ref: '#/components/schemas/AdminPermission'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /jans-config-api/admin-ui/user/rolePermissionsMapping:
    get:
      tags:
        - Admin UI - Role-Permissions Mapping
      x-cli-plugin: admin-ui
      summary: Get admin ui role-permissions mapping.
      description: Get admin ui role-permissions mapping.
      operationId: get-adminui-role-permissions
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.readonly]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Get admin ui role-permissions mapping.
                description: Get admin ui role-permissions mapping.
                type: array
                items:
                  $ref: '#/components/schemas/RolePermissionMapping'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Admin UI - Role-Permissions Mapping
      x-cli-plugin: admin-ui
      summary: Add role-permissions mapping.
      description: Add role-permissions mapping.
      operationId: Add role-permissions mapping.
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePermissionMapping'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Add role-permissions mapping.
                description: Add role-permissions mapping.
                type: array
                items:
                  $ref: '#/components/schemas/RolePermissionMapping'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Admin UI - Role-Permissions Mapping
      x-cli-plugin: admin-ui
      summary: Map permissions to role.
      description: Map permissions to role.
      operationId: map-permissions-to-role
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePermissionMapping'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Map permissions to role.
                description: Map permissions to role.
                type: array
                items:
                  $ref: '#/components/schemas/RolePermissionMapping'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Admin UI - Role-Permissions Mapping
      x-cli-plugin: admin-ui
      summary: Remove role-permissions mapping.
      description: Remove role-permissions mapping.
      operationId: remove-role-permissions-permission
      security:
        - oauth2: [https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePermissionMapping'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Remove role-permissions mapping.
                description: Remove role-permissions mapping.
                type: array
                items:
                  $ref: '#/components/schemas/RolePermissionMapping'
        '400':
          $ref: '#/components/responses/NotAcceptable'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    UserInfoRequest:
      type: object
      properties:
        code:
          type: string
        access_token:
          type: string
    LicenseRequest:
      type: object
      properties:
        licenseKey:
          type: string
        validityPeriod:
          type: string
        maxActivations:
          type: integer
          format: int32
        licenseActive:
          type: boolean
    LicenseApiResponse:
      type: object
      properties:
        apiResult:
          type: boolean
        responseMessage:
          type: string
        responseCode:
          type: integer
          format: int32
    LicenseResponse:
      type: object
      properties:
        licenseEnabled:
          type: boolean
        productName:
          type: string
        productCode:
          type: string
        licenseType:
          type: string
        maxActivations:
          type: integer
          format: int32
        licenseKey:
          type: string
        licenseActive:
          type: boolean
        validityPeriod:
          type: string
        companyName:
          type: string
        customerEmail:
          type: string
        customerFirstName:
          type: string
        customerLastName:
          type: string
    LicenseSpringCredentials:
      type: object
      properties:
        apiKey:
          type: string
        productCode:
          type: string
        sharedKey:
          type: string
        managementKey:
          type: string
        hardwareId:
          type: string
        licenseKey:
          type: string
    AdminPermission:
      type: object
      properties:
        permission:
          type: string
        description:
          type: string
        defaultPermissionInToken:
          type: boolean
    RolePermissionMapping:
      type: object
      properties:
        role:
          type: string
        permissions:
          type: array
          items:
            type: string
    AdminRole:
      type: object
      properties:
        role:
          type: string
        description:
          type: string
        deletable:
          type: boolean
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "https://{op-hostname}/.../token"
          scopes:
            https://jans.io/oauth/jans-auth-server/config/adminui/user/role.read: View
              admin user role related information
            https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write: Manage
              admin user role related information
            https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.read: View
              admin permission related information
            https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write: Manage
              admin permission related information
            https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.readonly: View
              role-permission mapping related information
            https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write: Manage
              role-permission mapping related information
            https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly: Delete
              admin-ui license related information
            https://jans.io/oauth/jans-auth-server/config/adminui/license.write: View
              admin-ui license related information
